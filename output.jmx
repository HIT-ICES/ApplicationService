<?xml version="1.0" encoding="UTF-8"?><jmeterTestPlan jmeter="4.0 r1823414" properties="4.0" version="1.2">
  <org.apache.jorphan.collections.HashTree>
    <TestPlan enabled="true" guiclass="TestPlanGui" testclass="TestPlan" testname="Example Test Plan"/>
    <org.apache.jorphan.collections.HashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup enabled="true" guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="jp@gc - Stepping Thread Group">
<stringProp name="ThreadGroup.num_threads">40</stringProp>
<stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
<stringProp name="Threads initial delay">0.0</stringProp>
<stringProp name="Start users count">10.0</stringProp>
<stringProp name="Start users count burst">0.0</stringProp>
<stringProp name="Start users period">10.0</stringProp>
<stringProp name="Stop users count">0.0</stringProp>
<stringProp name="Stop users period">0.0</stringProp>
<stringProp name="flighttime">10.0</stringProp>
<stringProp name="rampUp">0</stringProp>
<elementProp elementType="LoopController" enabled="true" guiclass="LoopControlPanel" name="ThreadGroup.main_controller" testclass="LoopController" testname="循环控制器">
<boolProp name="LoopController.continue_forever">false</boolProp>
<intProp name="LoopController.loops">-1</intProp>
</elementProp>
</kg.apc.jmeter.threads.SteppingThreadGroup>
      <org.apache.jorphan.collections.HashTree>
        <TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="并发线程数—${thread}">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <org.apache.jorphan.collections.HashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <org.apache.jorphan.collections.HashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求默认值">
            <elementProp elementType="Arguments" name="HTTPsampler.Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp elementType="HTTPArgument" name="">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"/>
                  <stringProp name="Argument.metadata"/>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.domain">wrff</stringProp>
            <intProp name="HTTPSampler.port">8848</intProp>
            <stringProp name="HTTPSampler.path">/testMeasure/getSystem</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="HTTPSampler.connect_timeout">5000</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSamplerProxy>
          <org.apache.jorphan.collections.HashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="header manager">
            <collectionProp name="HeaderManager.headers"/>
          </HeaderManager>
          <org.apache.jorphan.collections.HashTree/>
          <com.hitices.pressure.entity.MyResultCollector enabled="true" guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="collector">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">./test.jtl</stringProp>
          </com.hitices.pressure.entity.MyResultCollector>
          <org.apache.jorphan.collections.HashTree/>
        </org.apache.jorphan.collections.HashTree>
        <BeanShellListener guiclass="TestBeanGUI" testclass="BeanShellListener" testname="BeanShell Listener">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">import org.apache.jmeter.threads.JMeterContextService;

int num = JMeterContextService.getNumberOfThreads();
int gap = 10;
int max_iter = 10;
for(int i=max_iter; i&gt;=1; i--) {
	if(num &lt;= gap * i) {
		vars.put("thread",String.valueOf(gap * i));
	}
}</stringProp>
        </BeanShellListener>
        <org.apache.jorphan.collections.HashTree/>
      </org.apache.jorphan.collections.HashTree>
    </org.apache.jorphan.collections.HashTree>
  </org.apache.jorphan.collections.HashTree>
</jmeterTestPlan>
